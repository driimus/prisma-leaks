name: monitor memory usage
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        exposeGc: [true, false]
        tests: [10, 50]
        # schemaSize: ["large", "small"]
        # engine: ["library", "binary"]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: "postgresql://postgres:example@localhost"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: yarn

      - name: setup
        run: |
          # yarn
          python inflate_tests.py ${{matrix.tests}}
          yarn prisma migrate deploy --schema prisma/large-library.prisma

      - name: test
        if: ${{matrix.exposeGc == false}}
        run: yarn test --runInBand --logHeapUsage --no-cache

      - name: test with exposed garbage collector
        if: ${{matrix.exposeGc == true }}
        run: node --expose-gc ./node_modules/.bin/jest --runInBand --logHeapUsage --no-cache
